name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-and-test:
    name: Lint & Test (Node.js 20.x)
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-keys.outputs.cache-key }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Generate cache keys
        id: cache-keys
        run: |
          echo "cache-key=node-modules-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}" >> $GITHUB_OUTPUT

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ steps.cache-keys.outputs.cache-key }}
          restore-keys: |
            node-modules-${{ runner.os }}-

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Run linting
        run: npm run lint

      - name: Check formatting
        run: npm run format:check

      - name: Run tests
        run: npm test

      - name: Test CLI functionality
        run: |
          node bin/claude-config.js --version
          node bin/claude-config.js list
          node bin/claude-config.js --dry-run

  test-matrix:
    name: Test on Node.js ${{ matrix.node-version }}
    runs-on: ubuntu-latest
    needs: lint-and-test
    if: success()

    strategy:
      matrix:
        node-version: [22.x] # Skip 20.x since it's tested above

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ needs.lint-and-test.outputs.cache-key }}
          restore-keys: |
            node-modules-${{ runner.os }}-

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Run tests
        run: npm test

  # Cross-platform testing - only on main branch pushes
  test-os:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: lint-and-test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    strategy:
      matrix:
        os: [windows-latest, macos-latest] # Skip ubuntu-latest since it's tested above

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Run tests
        run: npm test

      - name: Test CLI on ${{ matrix.os }}
        shell: bash
        run: |
          node bin/claude-config.js --version
          node bin/claude-config.js list

  package:
    name: Test package
    runs-on: ubuntu-latest
    needs: lint-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ needs.lint-and-test.outputs.cache-key }}

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Test pack
        run: |
          npm pack --dry-run
          npm pack
          tar -tzf *.tgz

      - name: Test installation from pack
        run: |
          PACK_FILE=$(ls *.tgz)
          mkdir test-install
          cd test-install
          npm init -y
          npm install --prefer-offline ../$PACK_FILE
          npx claude-config --version
          npx claude-config list
