name: Manual Publish

on:
  workflow_dispatch:
    inputs:
      force-publish:
        description: 'Force publish even if version already exists'
        required: false
        default: false
        type: boolean
      registry:
        description: 'Registry to publish to'
        required: true
        default: 'npm'
        type: choice
        options:
          - npm
          - github
          - both

jobs:
  ci:
    name: Run CI
    uses: ./.github/workflows/ci.yml

  check-version:
    name: Check version status
    runs-on: ubuntu-latest
    needs: ci
    outputs:
      package-version: ${{ steps.version-info.outputs.package-version }}
      npm-exists: ${{ steps.version-info.outputs.npm-exists }}
      github-exists: ${{ steps.version-info.outputs.github-exists }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version information
        id: version-info
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          echo "package-version=$PACKAGE_VERSION" >> $GITHUB_OUTPUT

          # Check npm registry
          NPM_VERSION=$(npm view @typhoonworks/claude-config@$PACKAGE_VERSION version 2>/dev/null || echo "")
          if [ "$NPM_VERSION" = "$PACKAGE_VERSION" ]; then
            echo "npm-exists=true" >> $GITHUB_OUTPUT
            echo "ðŸ“¦ Version $PACKAGE_VERSION already exists on npm"
          else
            echo "npm-exists=false" >> $GITHUB_OUTPUT
            echo "âœ… Version $PACKAGE_VERSION is new on npm"
          fi

          # Check GitHub Packages (this might fail if package doesn't exist yet)
          GITHUB_VERSION=$(npm view @typhoonworks/claude-config@$PACKAGE_VERSION version --registry=https://npm.pkg.github.com 2>/dev/null || echo "")
          if [ "$GITHUB_VERSION" = "$PACKAGE_VERSION" ]; then
            echo "github-exists=true" >> $GITHUB_OUTPUT
            echo "ðŸ“¦ Version $PACKAGE_VERSION already exists on GitHub Packages"
          else
            echo "github-exists=false" >> $GITHUB_OUTPUT
            echo "âœ… Version $PACKAGE_VERSION is new on GitHub Packages"
          fi

  publish-npm:
    name: Publish to npm
    runs-on: ubuntu-latest
    needs: [ci, check-version]
    if: |
      success() &&
      (github.event.inputs.registry == 'npm' || github.event.inputs.registry == 'both') &&
      (github.event.inputs.force-publish == 'true' || needs.check-version.outputs.npm-exists == 'false')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          registry-url: https://registry.npmjs.org/
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Publish to npm
        run: |
          if [ "${{ github.event.inputs.force-publish }}" = "true" ]; then
            echo "ðŸš¨ Force publishing version ${{ needs.check-version.outputs.package-version }} to npm..."
          else
            echo "ðŸ“¦ Publishing version ${{ needs.check-version.outputs.package-version }} to npm..."
          fi
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  # Publish to GitHub Packages
  publish-github:
    name: Publish to GitHub Packages
    runs-on: ubuntu-latest
    needs: [ci, check-version]
    if: |
      success() &&
      (github.event.inputs.registry == 'github' || github.event.inputs.registry == 'both') &&
      (github.event.inputs.force-publish == 'true' || needs.check-version.outputs.github-exists == 'false')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          registry-url: https://npm.pkg.github.com/
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Configure package for GitHub registry
        run: |
          npm pkg set publishConfig.registry="https://npm.pkg.github.com"

      - name: Publish to GitHub Packages
        run: |
          if [ "${{ github.event.inputs.force-publish }}" = "true" ]; then
            echo "ðŸš¨ Force publishing version ${{ needs.check-version.outputs.package-version }} to GitHub Packages..."
          else
            echo "ðŸ“¦ Publishing version ${{ needs.check-version.outputs.package-version }} to GitHub Packages..."
          fi
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
